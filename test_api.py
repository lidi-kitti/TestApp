import requests
import json

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "http://localhost:8000/api"

def test_authentication():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò ===")
    
    # –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    print("\n1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    register_data = {
        "email": "test@example.com",
        "name": "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "password": "test123",
        "password_confirm": "test123"
    }
    
    try:
        response = requests.post(f"{BASE_URL}/register", json=register_data)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {response.json()}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç –≤—Ö–æ–¥–∞
    print("\n2. –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É:")
    login_data = {
        "email": "admin@example.com",
        "password": "admin123"
    }
    
    try:
        response = requests.post(f"{BASE_URL}/login", json=login_data)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            token_data = response.json()
            print(f"–¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token_data['access_token'][:50]}...")
            return token_data['access_token']
        else:
            print(f"–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.json()}")
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return None

def test_protected_endpoints(token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"""
    if not token:
        print("–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤")
        return
    
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–©–ò–©–ï–ù–ù–´–• –≠–ù–î–ü–û–ò–ù–¢–û–í ===")
    
    headers = {"Authorization": f"Bearer {token}"}
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
    print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    try:
        response = requests.get(f"{BASE_URL}/profile", headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            profile = response.json()
            print(f"–ü—Ä–æ—Ñ–∏–ª—å: {profile['name']} ({profile['email']})")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.json()}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–±–∏–∑–Ω–µ—Å-–æ–±—ä–µ–∫—Ç—ã)
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:")
    try:
        response = requests.get(f"{BASE_URL}/products", headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            products = response.json()
            print(f"–ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {len(products)}")
            for product in products[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  - {product['name']}: {product['price']} —Ä—É–±.")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.json()}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
    print("\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤:")
    try:
        response = requests.get(f"{BASE_URL}/orders", headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            orders = response.json()
            print(f"–ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(orders)}")
            for order in orders[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  - –ó–∞–∫–∞–∑ {order['id']}: {order['customer']} - {order['total']} —Ä—É–±.")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.json()}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    print("\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤:")
    try:
        response = requests.get(f"{BASE_URL}/customers", headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            customers = response.json()
            print(f"–ù–∞–π–¥–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: {len(customers)}")
            for customer in customers[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  - {customer['name']}: {customer['email']}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.json()}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

def test_permission_management(token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏"""
    if not token:
        print("–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏")
        return
    
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–ü–†–ê–í–õ–ï–ù–ò–Ø –†–ê–ó–†–ï–®–ï–ù–ò–Ø–ú–ò ===")
    
    headers = {"Authorization": f"Bearer {token}"}
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π
    print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–æ–ª–µ–π:")
    try:
        response = requests.get(f"{BASE_URL}/roles", headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            roles = response.json()
            print(f"–ù–∞–π–¥–µ–Ω–æ —Ä–æ–ª–µ–π: {len(roles)}")
            for role in roles:
                print(f"  - {role['name']}: {role['description']}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.json()}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤:")
    try:
        response = requests.get(f"{BASE_URL}/resources", headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            resources = response.json()
            print(f"–ù–∞–π–¥–µ–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤: {len(resources)}")
            for resource in resources:
                print(f"  - {resource['name']}: {resource['description']}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.json()}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

def test_unauthorized_access():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–û–°–¢–£–ü–ê –ë–ï–ó –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò ===")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º—É —ç–Ω–¥–ø–æ–∏–Ω—Ç—É –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
    print("\n1. –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–æ—Ñ–∏–ª—é –±–µ–∑ —Ç–æ–∫–µ–Ω–∞:")
    try:
        response = requests.get(f"{BASE_URL}/profile")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 401:
            print("‚úì –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω (401 Unauthorized)")
        else:
            print(f"‚úó –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∏–∑–Ω–µ—Å-–æ–±—ä–µ–∫—Ç–∞–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
    print("\n2. –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–æ–¥—É–∫—Ç–∞–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞:")
    try:
        response = requests.get(f"{BASE_URL}/products")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 401:
            print("‚úì –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω (401 Unauthorized)")
        else:
            print(f"‚úó –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò –ò –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò")
    print("=" * 60)
    
    # –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    test_unauthorized_access()
    
    # –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    token = test_authentication()
    
    # –¢–µ—Å—Ç –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
    test_protected_endpoints(token)
    
    # –¢–µ—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏
    test_permission_management(token)
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
    print("\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: python main.py")
    print("API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000/docs")

if __name__ == "__main__":
    main() 